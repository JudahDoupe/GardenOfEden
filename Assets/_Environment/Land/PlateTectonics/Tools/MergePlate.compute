#pragma kernel MergePlates

#include "../PlateTectonicsInclude.hlsl"

RWTexture2DArray<float> ContinentalIdMap; 
RWTexture2DArray<float> PlateThicknessMaps;

float OldPlateId; 
float NewPlateId;
float OldPlateIdx; 
float NewPlateIdx;
float4 OldPlateRotation;
float4 NewPlateRotation;

uint3 xyz_to_xyp(float3 xyz, float4 rotation, int p)
{
    uint3 xyw = xyz_to_xyw(rotate_vector(xyz, q_inverse(rotation)));
    return uint3(xyw.xy, xyw.z + (p * 6));
}

[numthreads(8, 8, 6)]
void MergePlates(uint3 id : SV_DispatchThreadID)
{
    float3 xyz = rotate_vector(xyw_to_xyz(id, 1000), NewPlateRotation);
    float plateId = ContinentalIdMap[xyz_to_xyw(xyz)];
    uint3 oldIdx = xyz_to_xyp(xyz, OldPlateRotation, OldPlateIdx);
    uint3 newIdx = uint3(id.x, id.y, id.z + NewPlateIdx * 6);
    float oldThickness = PlateThicknessMaps[oldIdx];
    float newThickness = PlateThicknessMaps[newIdx];
    
    bool isOld = plateId == OldPlateId;
    bool isNew = plateId == NewPlateId;
    float thickness = max(oldThickness, newThickness) * (!isOld && !isNew)
                    + (oldThickness * isOld)
                    + (newThickness * isNew);
    
    PlateThicknessMaps[xyz_to_xyp(xyz, NewPlateRotation, NewPlateIdx)] = thickness;
    ContinentalIdMap[id] = ContinentalIdMap[id] * !isOld 
                         + NewPlateId * isOld;
}