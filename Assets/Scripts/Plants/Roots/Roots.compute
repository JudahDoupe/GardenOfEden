#pragma kernel UpdateRoots

struct RootData
{
	float2 uv;
	float radius;
	float depth;
	int id;
};
StructuredBuffer<RootData> RootBuffer;
int NumRoots;

float DeltaTime;

RWTexture2D<float4> SoilMap;
RWTexture2D<float4> RootMap;
RWTexture2D<float4> WaterOutput;

static float MaxHeight = 200.0f; 
static float WidthInMeters = 400.0f;
static float WidthInPixels = 512.0f;
static float AbsorptionRate = 0.02f; 

[numthreads(8,8,1)]
void UpdateRoots(uint3 id : SV_DispatchThreadID)
{
	float rootId = 0.0f;
	float rootDepth = 0.0f;
    float soilDepth = SoilMap[id.xy].r;
    float waterDepth = SoilMap[id.xy].b;

	for (int i = 0; i < NumRoots; i++) {
		float2 xy = RootBuffer[i].uv * WidthInPixels;
		float dist = distance(id.xy, xy);
		float desiredGrowth = smoothstep(RootBuffer[i].radius, 0, dist) * RootBuffer[i].depth;
		float actualGrowth = min(soilDepth, desiredGrowth);

		if (desiredGrowth > rootDepth) {
			rootDepth = actualGrowth;
			rootId = RootBuffer[i].id + 0.5;
		}
	}
	
    float absorpedWater = min(rootDepth * AbsorptionRate * DeltaTime, waterDepth);
    
    SoilMap[id.xy] = float4(soilDepth, SoilMap[id.xy].g, waterDepth - absorpedWater, SoilMap[id.xy].a);
	RootMap[id.xy] = float4(rootId, rootDepth, 0, 0);
	WaterOutput[id.xy] = float4(rootId, absorpedWater, 0, 0);
}

